global
  daemon
  log stdout format raw local0

  # Default SSL material locations
  ca-base /usr/local/etc/ssl
  crt-base /usr/local/etc/ssl

  # Default ciphers to use on SSL-enabled listening sockets.
  # For more information, see ciphers(1SSL). This list is from:
  #  https://hynek.me/articles/hardening-your-web-servers-ssl-ciphers/
  # An alternative list with additional directives can be obtained from
  #  https://mozilla.github.io/server-side-tls/ssl-config-generator/?server=haproxy
  #ssl-default-bind-ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:RSA+AESGCM:RSA+AES:!aNULL:!MD5:!DSS
  #ssl-default-bind-options no-sslv3

  # intermediate configuration, tweak to your needs
  ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
  ssl-default-bind-options no-sslv3 no-tlsv10 no-tlsv11 no-tls-tickets

  ssl-default-server-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
  ssl-default-server-options no-sslv3 no-tlsv10 no-tlsv11 no-tls-tickets

  # curl https://ssl-config.mozilla.org/ffdhe2048.txt > /path/to/dhparam.pem
  ssl-dh-param-file /usr/local/etc/ssl/dhparam.pem

defaults
  log global
  mode  http
  option  httplog
  #log-format "%si:%sp\ %ci\ [%t]\ \"%r\"\ %ST\ %B\ \"%hr\""
  option  dontlognull
  timeout connect 5000
  timeout client  90000
  timeout server  90000

frontend all
  bind :::80
  bind :::443 ssl crt fullchainandkey.pem alpn h2,http/1.1

  # capture request header Referer len 128
  # capture request header User-Agent len 128
  # capture request header Host len 128
  option forwardfor
  http-request set-var(txn.path) path
  http-request set-var(txn.host) hdr(host)

  http-request set-header X-Forwarded-Proto https if { ssl_fc }
  http-request set-header X-Forwarded-Proto http if ! { ssl_fc }
  http-request add-header X-Forwarded-By %[dst]
  http-request add-header X-Forwarded-Host %[var(txn.host)]

  acl root-path-host hdr_dom(host) -i tomcat.local
  acl myapp-path path_beg /myapp

  # use tomcat for either path=/myapp or host=tomcat.local
  use_backend tomcat if myapp-path
  use_backend tomcat if root-path-host
  default_backend no-match

backend tomcat
  # haproxy runs in network=host
  server tomcat1 localhost:8080

backend no-match
  mode http
  http-request deny deny_status 404
